{"version":3,"sources":["components/MainPage.js","App.js","index.js"],"names":["MainPage","props","state","todo","1","id","heading","details","doing","2","done","3","total","showModal","editModal","showEditModal","draggedCard","dragOn","window","localStorage","setItem","JSON","stringify","this","getItem","setState","parse","setInterval","saveData","temp","n","item","master","e","preventDefault","fromList","card_id","toList","todo_to_doing","todo_to_done","doing_to_todo","doing_to_done","done_to_doing","done_to_todo","className","Navbar","bg","variant","OverlayTrigger","placement","overlay","Tooltip","href","target","style","marginLeft","class","Brand","align","marginRight","Container","fluid","Row","Col","Button","onClick","confirm","Paper","elevation","borderRadius","onDragOver","dragOver","onDrop","dropCard","Alert","padding","marginBottom","Object","keys","length","marginTop","map","Card","border","draggable","onDragStart","dragStart","onDragEnd","dragEnd","opacity","Header","as","size","Body","Text","editTask","Modal","centered","show","onHide","closeButton","Title","Form","Group","Label","Control","type","onChange","value","rows","Footer","block","saveEditTask","disabled","addTask","fixed","backgroundColor","fontFamily","Date","getFullYear","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8f0b945.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Navbar,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Modal,\r\n  Form,\r\n  Alert,\r\n  OverlayTrigger,\r\n  Tooltip,\r\n} from \"react-bootstrap\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport \"./style.css\";\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      todo: {\r\n        1: {\r\n          id: 1,\r\n          heading: \"Task 1\",\r\n          details:\r\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n        },\r\n      },\r\n      doing: {\r\n        2: {\r\n          id: 2,\r\n          heading: \"Task 2\",\r\n          details:\r\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n        },\r\n      },\r\n      done: {\r\n        3: {\r\n          id: 3,\r\n          heading: \"Task 3\",\r\n          details:\r\n            \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\",\r\n        },\r\n      },\r\n      total: 3,\r\n      showModal: false,\r\n      heading: \"\",\r\n      details: \"\",\r\n      editModal: {},\r\n      showEditModal: false,\r\n      draggedCard: null,\r\n      dragOn: false,\r\n    };\r\n  }\r\n\r\n  saveData() {\r\n    window.localStorage.setItem(\"todo\", JSON.stringify(this.state.todo));\r\n    window.localStorage.setItem(\"doing\", JSON.stringify(this.state.doing));\r\n    window.localStorage.setItem(\"done\", JSON.stringify(this.state.done));\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (window.localStorage.getItem(\"user_status\") === null) {\r\n      window.localStorage.setItem(\"user_status\", \"existing\");\r\n      window.localStorage.setItem(\"todo\", JSON.stringify(this.state.todo));\r\n      window.localStorage.setItem(\"doing\", JSON.stringify(this.state.doing));\r\n      window.localStorage.setItem(\"done\", JSON.stringify(this.state.done));\r\n    } else {\r\n      this.setState({\r\n        todo: JSON.parse(window.localStorage.getItem(\"todo\")),\r\n        doing: JSON.parse(window.localStorage.getItem(\"doing\")),\r\n        done: JSON.parse(window.localStorage.getItem(\"done\")),\r\n      });\r\n    }\r\n    setInterval(() => {\r\n      this.saveData();\r\n    }, 1000);\r\n  }\r\n\r\n  // This function is used to add a new task\r\n  addTask() {\r\n    var temp = this.state.todo;\r\n    var n = this.state.total;\r\n    n = n + 1;\r\n    temp[n] = {\r\n      id: `${n}`,\r\n      heading: `${this.state.heading}`,\r\n      details: `${this.state.details}`,\r\n    };\r\n    this.setState({\r\n      todo: temp,\r\n      total: n,\r\n      showModal: false,\r\n    });\r\n  }\r\n\r\n  editTask(item) {\r\n    var temp;\r\n    if (item in this.state.todo) {\r\n      temp = this.state.todo[item];\r\n    } else if (item in this.state.doing) {\r\n      temp = this.state.doing[item];\r\n    } else {\r\n      temp = this.state.done[item];\r\n    }\r\n    this.setState({\r\n      showEditModal: true,\r\n      editModal: temp,\r\n      heading: temp[\"heading\"],\r\n      details: temp[\"details\"],\r\n    });\r\n  }\r\n\r\n  saveEditTask() {\r\n    var temp = this.state.editModal;\r\n    temp[\"heading\"] = this.state.heading;\r\n    temp[\"details\"] = this.state.details;\r\n    var master;\r\n    if (temp[\"id\"] in this.state.todo) {\r\n      master = this.state.todo;\r\n      master[temp[\"id\"]] = temp;\r\n      this.setState({ todo: master });\r\n    } else if (temp[\"id\"] in this.state.doing) {\r\n      master = this.state.doing;\r\n      master[temp[\"id\"]] = temp;\r\n      this.setState({ doing: master });\r\n    } else {\r\n      master = this.state.done;\r\n      master[temp[\"id\"]] = temp;\r\n      this.setState({ done: master });\r\n    }\r\n    this.setState({ showEditModal: false });\r\n  }\r\n\r\n  // This function change the tasks from todo list to doing list.\r\n  todo_to_doing(item) {\r\n    var todo = this.state.todo;\r\n    var doing = this.state.doing;\r\n    var temp = todo[item];\r\n    delete todo[item];\r\n    doing[item] = temp;\r\n    this.setState({ todo: todo, doing: doing });\r\n  }\r\n\r\n  todo_to_done(item) {\r\n    var todo = this.state.todo;\r\n    var done = this.state.done;\r\n    var temp = todo[item];\r\n    delete todo[item];\r\n    done[item] = temp;\r\n    this.setState({ todo: todo, done: done });\r\n  }\r\n\r\n  // This function change the tasks from doing list to todo list.\r\n  doing_to_todo(item) {\r\n    var todo = this.state.todo;\r\n    var doing = this.state.doing;\r\n    var temp = doing[item];\r\n    delete doing[item];\r\n    todo[item] = temp;\r\n    this.setState({ todo: todo, doing: doing });\r\n  }\r\n\r\n  // This function change the tasks from doing list to done list.\r\n  doing_to_done(item) {\r\n    var doing = this.state.doing;\r\n    var done = this.state.done;\r\n    var temp = doing[item];\r\n    delete doing[item];\r\n    done[item] = temp;\r\n    this.setState({ doing: doing, done: done });\r\n  }\r\n\r\n  // This function change the tasks from done list to doing list.\r\n  done_to_doing(item) {\r\n    var done = this.state.done;\r\n    var doing = this.state.doing;\r\n    var temp = done[item];\r\n    delete done[item];\r\n    doing[item] = temp;\r\n    this.setState({ done: done, doing: doing });\r\n  }\r\n\r\n  done_to_todo(item) {\r\n    var done = this.state.done;\r\n    var todo = this.state.todo;\r\n    var temp = done[item];\r\n    delete done[item];\r\n    todo[item] = temp;\r\n    this.setState({ done: done, todo: todo });\r\n  }\r\n\r\n  dragStart(e, item) {\r\n    this.setState({ draggedCard: item });\r\n  }\r\n\r\n  dragEnd(e) {\r\n    this.setState({ draggedCard: null });\r\n  }\r\n\r\n  dragOver(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  dropCard(e, item) {\r\n    let card_id = this.state.draggedCard;\r\n    let fromList,\r\n      toList = item;\r\n    if (card_id in this.state.todo) fromList = 1;\r\n    else if (card_id in this.state.doing) fromList = 2;\r\n    else fromList = 3;\r\n    this.setState({ draggedCard: null });\r\n    if (fromList === 1) {\r\n      if (toList === 2) this.todo_to_doing(card_id);\r\n      else if (toList === 3) this.todo_to_done(card_id);\r\n    } else if (fromList === 2) {\r\n      if (toList === 1) this.doing_to_todo(card_id);\r\n      else if (toList === 3) this.doing_to_done(card_id);\r\n    } else if (fromList === 3) {\r\n      if (toList === 2) this.done_to_doing(card_id);\r\n      else if (toList === 1) this.done_to_todo(card_id);\r\n    }\r\n  }\r\n\r\n  // This is the render function\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {/* ----------------------------------------------Navbar-------------------------------------------- */}\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <OverlayTrigger\r\n            placement=\"right\"\r\n            overlay={<Tooltip>Know about Kanban</Tooltip>}\r\n          >\r\n            <a\r\n              href=\"https://www.digite.com/kanban/what-is-kanban/\"\r\n              target=\"__blank\"\r\n              style={{ marginLeft: \"15px\" }}\r\n            >\r\n              <i class=\"fab fa-jira fa-2x task-icon\"></i>\r\n            </a>\r\n          </OverlayTrigger>\r\n          <Navbar.Brand className=\"ml-auto mr-auto\" align=\"center\">\r\n            <h4 className=\"main-heading\">Kanban Dashboard</h4>\r\n          </Navbar.Brand>\r\n          <OverlayTrigger\r\n            placement=\"left\"\r\n            overlay={<Tooltip>View Source Code</Tooltip>}\r\n          >\r\n            <a\r\n              href=\"https://github.com/gowthamparuchuru/react-kanban-dashboard\"\r\n              target=\"__blank\"\r\n              style={{ marginRight: \"15px\" }}\r\n            >\r\n              <i class=\"fab fa-github fa-2x github-icon\"></i>\r\n            </a>\r\n          </OverlayTrigger>\r\n        </Navbar>\r\n\r\n        {/* ----------------------------------------------Container-------------------------------------------- */}\r\n        <Container className=\"board\" fluid>\r\n          {/* ---------------------Add Task Button------------------- */}\r\n          <Row>\r\n            <Col align=\"center\">\r\n              <Button\r\n                onClick={() => this.setState({ showModal: true })}\r\n                variant=\"info\"\r\n              >\r\n                <i class=\"fas fa-plus-circle  mr-2\"></i>Add Task\r\n              </Button>\r\n              <Button\r\n                variant=\"danger\"\r\n                className=\"float-right\"\r\n                onClick={() => {\r\n                  if (window.confirm(\"Are you sure to reset?\"))\r\n                    this.setState({ todo: {}, doing: {}, done: {} });\r\n                }}\r\n              >\r\n                Reset\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* ---------------------Task Lists------------------- */}\r\n          <Row className=\"board\">\r\n            {/* ---------------------TO DO List------------------- */}\r\n            <Col>\r\n              <span className=\"list\">\r\n                <Paper\r\n                  elevation={5}\r\n                  className=\"paper-list\"\r\n                  style={{ borderRadius: \"3%\" }}\r\n                  onDragOver={(e) => this.dragOver(e)}\r\n                  onDrop={(e) => this.dropCard(e, 1)}\r\n                >\r\n                  <Alert variant=\"primary\" style={{ padding: \"5px\" }}>\r\n                    <h4 align=\"center\" style={{ marginBottom: \"0px\" }}>\r\n                      To Do\r\n                    </h4>\r\n                  </Alert>\r\n                  {Object.keys(this.state.todo).length === 0 ? (\r\n                    <Alert\r\n                      variant=\"danger\"\r\n                      align=\"center\"\r\n                      style={{ marginTop: \"50px\" }}\r\n                    >\r\n                      Add a Task\r\n                    </Alert>\r\n                  ) : (\r\n                    Object.keys(this.state.todo).map((item) => (\r\n                      <Card\r\n                        id={item}\r\n                        className=\"task-card\"\r\n                        border=\"primary\"\r\n                        bg=\"light\"\r\n                        draggable=\"true\"\r\n                        onDragStart={(e) => this.dragStart(e, item)}\r\n                        onDragEnd={(e) => this.dragEnd(e)}\r\n                        style={{\r\n                          opacity: this.state.draggedCard === item ? 0.2 : 1,\r\n                        }}\r\n                      >\r\n                        <Card.Header as=\"h5\" align=\"center\">\r\n                          {\" \"}\r\n                          {this.state.todo[item][\"heading\"]}\r\n                          <Button\r\n                            size=\"sm\"\r\n                            className=\"float-right\"\r\n                            onClick={() => {\r\n                              this.todo_to_doing(item);\r\n                            }}\r\n                          >\r\n                            <i class=\"fas fa-angle-right\"></i>\r\n                          </Button>\r\n                        </Card.Header>\r\n                        <Card.Body className=\"card-body\">\r\n                          <Card.Text>\r\n                            {this.state.todo[item][\"details\"]}\r\n                          </Card.Text>\r\n\r\n                          <Button\r\n                            size=\"sm\"\r\n                            variant=\"outline-danger\"\r\n                            className=\"float-right\"\r\n                            style={{ borderRadius: \"70%\" }}\r\n                            onClick={() => {\r\n                              var temp = this.state.todo;\r\n                              delete temp[item];\r\n                              this.setState({ todo: temp });\r\n                            }}\r\n                          >\r\n                            <i class=\"far fa-trash-alt\"></i>\r\n                          </Button>\r\n                          <Button\r\n                            className=\"float-right mr-2\"\r\n                            style={{ borderRadius: \"70%\" }}\r\n                            variant=\"outline-info\"\r\n                            size=\"sm\"\r\n                            onClick={() => this.editTask(item)}\r\n                          >\r\n                            <i class=\"fas fa-pen\"></i>\r\n                          </Button>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    ))\r\n                  )}\r\n                </Paper>\r\n              </span>\r\n            </Col>\r\n\r\n            {/* ---------------------Doing List------------------- */}\r\n            <Col>\r\n              <span className=\"list\">\r\n                <Paper\r\n                  elevation={5}\r\n                  className=\"paper-list\"\r\n                  style={{ borderRadius: \"3%\" }}\r\n                  onDragOver={(e) => this.dragOver(e)}\r\n                  onDrop={(e) => this.dropCard(e, 2)}\r\n                >\r\n                  <Alert variant=\"info\" style={{ padding: \"5px\" }}>\r\n                    <h4 align=\"center\" style={{ marginBottom: \"0\" }}>\r\n                      Doing\r\n                    </h4>\r\n                  </Alert>\r\n                  {Object.keys(this.state.doing).length === 0 ? (\r\n                    <Alert\r\n                      variant=\"danger\"\r\n                      align=\"center\"\r\n                      style={{ marginTop: \"50px\" }}\r\n                    >\r\n                      Add a Task\r\n                    </Alert>\r\n                  ) : (\r\n                    Object.keys(this.state.doing).map((item) => (\r\n                      <Card\r\n                        id={item}\r\n                        className=\"task-card\"\r\n                        border=\"info\"\r\n                        bg=\"light\"\r\n                        draggable=\"true\"\r\n                        onDragStart={(e) => this.dragStart(e, item)}\r\n                        onDragEnd={(e) => this.dragEnd(e)}\r\n                        style={{\r\n                          opacity: this.state.draggedCard === item ? 0.2 : 1,\r\n                        }}\r\n                      >\r\n                        <Card.Header as=\"h5\" align=\"center\">\r\n                          <Button\r\n                            size=\"sm\"\r\n                            className=\"float-left\"\r\n                            onClick={() => {\r\n                              this.doing_to_todo(item);\r\n                            }}\r\n                          >\r\n                            <i class=\"fas fa-angle-left\"></i>\r\n                          </Button>{\" \"}\r\n                          {this.state.doing[item][\"heading\"]}\r\n                          <Button\r\n                            size=\"sm\"\r\n                            className=\"float-right\"\r\n                            onClick={() => this.doing_to_done(item)}\r\n                          >\r\n                            <i class=\"fas fa-angle-right\"></i>\r\n                          </Button>\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                          <Card.Text>\r\n                            {this.state.doing[item][\"details\"]}\r\n                          </Card.Text>\r\n                          <Button\r\n                            size=\"sm\"\r\n                            variant=\"outline-danger\"\r\n                            className=\"float-right\"\r\n                            style={{ borderRadius: \"70%\" }}\r\n                            onClick={() => {\r\n                              var temp = this.state.doing;\r\n                              delete temp[item];\r\n                              this.setState({ doing: temp });\r\n                            }}\r\n                          >\r\n                            <i class=\"far fa-trash-alt\"></i>\r\n                          </Button>\r\n                          <Button\r\n                            className=\"float-right mr-2\"\r\n                            style={{ borderRadius: \"70%\" }}\r\n                            variant=\"outline-info\"\r\n                            size=\"sm\"\r\n                            onClick={() => this.editTask(item)}\r\n                          >\r\n                            <i class=\"fas fa-pen\"></i>\r\n                          </Button>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    ))\r\n                  )}\r\n                </Paper>\r\n              </span>\r\n            </Col>\r\n\r\n            {/* ---------------------Done List------------------- */}\r\n            <Col>\r\n              <span className=\"list\">\r\n                <Paper\r\n                  elevation={5}\r\n                  className=\"paper-list\"\r\n                  style={{ borderRadius: \"3%\" }}\r\n                  onDragOver={(e) => this.dragOver(e)}\r\n                  onDrop={(e) => this.dropCard(e, 3)}\r\n                >\r\n                  <Alert variant=\"success\" style={{ padding: \"5px\" }}>\r\n                    <h4 align=\"center\" style={{ marginBottom: \"0\" }}>\r\n                      Done\r\n                    </h4>\r\n                  </Alert>\r\n                  {Object.keys(this.state.done).length === 0 ? (\r\n                    <Alert\r\n                      variant=\"danger\"\r\n                      align=\"center\"\r\n                      style={{ marginTop: \"50px\" }}\r\n                    >\r\n                      Add a Task\r\n                    </Alert>\r\n                  ) : (\r\n                    Object.keys(this.state.done).map((item) => (\r\n                      <Card\r\n                        id={item}\r\n                        className=\"task-card\"\r\n                        border=\"success\"\r\n                        bg=\"light\"\r\n                        draggable=\"true\"\r\n                        onDragStart={(e) => this.dragStart(e, item)}\r\n                        onDragEnd={(e) => this.dragEnd(e)}\r\n                        style={{\r\n                          opacity: this.state.draggedCard === item ? 0.2 : 1,\r\n                        }}\r\n                      >\r\n                        <Card.Header as=\"h5\" align=\"center\">\r\n                          <Button\r\n                            size=\"sm\"\r\n                            className=\"float-left\"\r\n                            onClick={() => this.done_to_doing(item)}\r\n                          >\r\n                            <i class=\"fas fa-angle-left\"></i>\r\n                          </Button>{\" \"}\r\n                          {this.state.done[item][\"heading\"]}\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                          <Card.Text>\r\n                            {this.state.done[item][\"details\"]}\r\n                          </Card.Text>\r\n                          <Button\r\n                            size=\"sm\"\r\n                            variant=\"outline-danger\"\r\n                            style={{ borderRadius: \"70%\" }}\r\n                            className=\"float-right\"\r\n                            onClick={() => {\r\n                              var temp = this.state.done;\r\n                              delete temp[item];\r\n                              this.setState({ done: temp });\r\n                            }}\r\n                          >\r\n                            <i class=\"far fa-trash-alt\"></i>\r\n                          </Button>\r\n                          <Button\r\n                            className=\"float-right mr-2\"\r\n                            style={{ borderRadius: \"70%\" }}\r\n                            variant=\"outline-info\"\r\n                            size=\"sm\"\r\n                            onClick={() => this.editTask(item)}\r\n                          >\r\n                            <i class=\"fas fa-pen\"></i>\r\n                          </Button>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    ))\r\n                  )}\r\n                </Paper>\r\n              </span>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        {/* ---------------------Pop Up Modal for Editing a task details------------------- */}\r\n        <Modal\r\n          size=\"md\"\r\n          centered\r\n          show={this.state.showEditModal}\r\n          onHide={() => this.setState({ showEditModal: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Edit Task</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label>Heading</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  onChange={(e) => this.setState({ heading: e.target.value })}\r\n                  value={this.state.heading}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Details :</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"3\"\r\n                  onChange={(e) => this.setState({ details: e.target.value })}\r\n                  value={this.state.details}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              block\r\n              variant=\"primary\"\r\n              onClick={() => this.saveEditTask()}\r\n              disabled={this.state.heading === \"\" ? true : false}\r\n            >\r\n              Save Edits\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        {/* ---------------------Pop Up Modal for adding new task details------------------- */}\r\n        <Modal\r\n          size=\"md\"\r\n          centered\r\n          show={this.state.showModal}\r\n          onHide={() => this.setState({ showModal: false })}\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Enter Task</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Label>Heading</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  onChange={(e) => this.setState({ heading: e.target.value })}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label>Details :</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"3\"\r\n                  onChange={(e) => this.setState({ details: e.target.value })}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              block\r\n              variant=\"primary\"\r\n              onClick={() => this.addTask()}\r\n              disabled={this.state.heading === \"\" ? true : false}\r\n            >\r\n              Add Task\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        {/* ---------------------Footer------------------- */}\r\n        <Navbar\r\n          variant=\"flat\"\r\n          fixed=\"bottom\"\r\n          className=\"footer\"\r\n          style={{ backgroundColor: \"#e8e4e1\" }}\r\n        >\r\n          <Navbar.Brand className=\"ml-auto mr-auto footer\">\r\n            <a\r\n              className=\"footer-link\"\r\n              href=\"https://gowthamparuchuru.github.io/my-portfolio/\"\r\n              target=\"__blank\"\r\n            >\r\n              Gowtham\r\n            </a>{\" \"}\r\n            <span style={{ fontFamily: \"Arial, Helvetica, sans-serif\" }}>\r\n              ©\r\n            </span>{\" \"}\r\n            {new Date().getFullYear()}\r\n          </Navbar.Brand>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\nimport MainPage from './components/MainPage';\n\nfunction App() {\n  return (\n    <div>\n      <MainPage/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}